//- apps.jade
extends ../_templates/mainPageTemplate.jade

block username
    span #{pageData.username}

block bodyContent

    div.row
        div.col-md-12
            h1 Applications on space
            table.table.table-hover
                thead
                    tr
                        th #
                        th App
                        th Package State
                        th App State
                        th Instances
                        th Options
                tbody(id="result")
                    - var n = 1
                    each app in pageData.apps
                        tr
                            td= n++
                            td #{app.entity.name}
                            td #{app.entity.package_state}
                            td #{app.entity.state}
                            td #{app.entity.instances}
                            td 
                                a.btn.btn-default(href="/apps/#{app.metadata.guid}", role="button") Details                                           
            p
                a.btn.btn-primary(href="/spaces/#{pageData.space_guid}/apps/add", role="button")
                    span.glyphicon.glyphicon-plus
                    |  Create a new application
                span 
                a.btn.btn-default(href="/spaces/#{pageData.space_guid}/apps", role="button")
                    span.glyphicon.glyphicon-refresh
                    |  Refresh     
                span            
                a.btn.btn-default(href="/home/", role="button")
                    span.glyphicon.glyphicon-arrow-left
                    |  Back                              

block bodyScripts

    script(type='text/javascript').

        function stopApp(app_guid) {
            //console.log(app_guid);

            var url = "/apps/stop/" + app_guid;

            $.ajax({
                url: url,
                type: 'GET',
                contentType: 'application/json'
            }).done(function (data) {
                if (data.error) {
                    var message = $.parseJSON(data.error);
                    console.log(message);
                    alert(message.description);
                } else {
                    console.log(data);
                    location.reload();
                }
            });

        }

        function startApp(app_guid) {

            var url = "/apps/start/" + app_guid;

            $.ajax({
                url: url,
                type: 'GET',
                contentType: 'application/json'
            }).done(function (data) {
                if (data.error) {
                    var message = $.parseJSON(data.error);
                    console.log(message);
                    alert(message.description);
                } else {
                    console.log(data);
                    location.reload();
                }
            });

        }

        function removeApp(app_guid) {
            //console.log(app_guid);

            var url = "/apps/remove/" + app_guid;

            $.ajax({
                url: url,
                type: 'GET',
                contentType: 'application/json'
            }).done(function (data) {
                console.log(data);
                location.reload();
            });

        }

        function openApp(app_guid) {
            //console.log(app_guid);

            var url = "/apps/open/" + app_guid;

            $.ajax({
                url: url,
                type: 'POST',
                contentType: 'application/json'
            }).done(function (data) {
                if (data.error) {
                    var message = $.parseJSON(data.error);
                    console.log(message);
                    alert(message.description);
                } else {
                    console.log(data);
                    window.open(data, '_blank');
                }
            });

        }

